{"mappings":"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","sources":["scripts/data/linux.ts","scripts/data/index.ts","scripts/data/react.ts","scripts/data/tensorflow.ts","scripts/keyboard.ts","scripts/terminal.ts","scripts/editor.ts","scripts/index.ts"],"sourcesContent":["import { Repo } from \".\";\n\nexport const linuxRepo: Repo = {\n\tlabel: \"Linux Kernel\",\n\turl: \"https://github.com/torvalds/linux\",\n\tfiles: [\n\t\t{\n\t\t\tpath: \"/linux/kernel/futex/core.c\",\n\t\t\tcode: `\nstatic struct {\n\tstruct futex_hash_bucket *queues;\n\tunsigned long            hashsize;\n} __futex_data __read_mostly __aligned(2*sizeof(long));\n\n#define futex_queues   (__futex_data.queues)\n#define futex_hashsize (__futex_data.hashsize)\n\n#ifdef CONFIG_FAIL_FUTEX\n\nstatic struct {\n\tstruct fault_attr attr;\n\n\tbool ignore_private;\n} fail_futex = {\n\t.attr = FAULT_ATTR_INITIALIZER,\n\t.ignore_private = false,\n};\n\nstatic int __init setup_fail_futex(char *str)\n{\n\treturn setup_fault_attr(&fail_futex.attr, str);\n}\n__setup(\"fail_futex=\", setup_fail_futex);\n\nbool should_fail_futex(bool fshared)\n{\n\tif (fail_futex.ignore_private && !fshared)\n\t\treturn false;\n\n\treturn should_fail(&fail_futex.attr, 1);\n}\n\n#ifdef CONFIG_FAULT_INJECTION_DEBUG_FS\n\nstatic int __init fail_futex_debugfs(void)\n{\n\tumode_t mode = S_IFREG | S_IRUSR | S_IWUSR;\n\tstruct dentry *dir;\n\n\tdir = fault_create_debugfs_attr(\"fail_futex\", NULL,\n\t\t\t\t\t&fail_futex.attr);\n\tif (IS_ERR(dir))\n\t\treturn PTR_ERR(dir);\n\n\tdebugfs_create_bool(\"ignore-private\", mode, dir,\n\t\t\t    &fail_futex.ignore_private);\n\treturn 0;\n}`\n\t\t},\n\t\t{\n\t\t\tpath: \"/crypto/aegis128-core.c\",\n\t\t\tcode:\n\t\t\t\t`\nstatic void crypto_aegis128_update(struct aegis_state *state)\n{\n\tunion aegis_block tmp;\n\tunsigned int i;\n\n\ttmp = state->blocks[AEGIS128_STATE_BLOCKS - 1];\n\tfor (i = AEGIS128_STATE_BLOCKS - 1; i > 0; i--)\n\t\tcrypto_aegis_aesenc(&state->blocks[i], &state->blocks[i - 1],\n\t\t\t\t    &state->blocks[i]);\n\tcrypto_aegis_aesenc(&state->blocks[0], &tmp, &state->blocks[0]);\n}\n\nstatic void crypto_aegis128_update_a(struct aegis_state *state,\n\t\t\t\t     const union aegis_block *msg,\n\t\t\t\t     bool do_simd)\n{\n\tif (IS_ENABLED(CONFIG_CRYPTO_AEGIS128_SIMD) && do_simd) {\n\t\tcrypto_aegis128_update_simd(state, msg);\n\t\treturn;\n\t}\n\n\tcrypto_aegis128_update(state);\n\tcrypto_aegis_block_xor(&state->blocks[0], msg);\n}\n\nstatic void crypto_aegis128_update_u(struct aegis_state *state, const void *msg,\n\t\t\t\t     bool do_simd)\n{\n\tif (IS_ENABLED(CONFIG_CRYPTO_AEGIS128_SIMD) && do_simd) {\n\t\tcrypto_aegis128_update_simd(state, msg);\n\t\treturn;\n\t}\n\n\tcrypto_aegis128_update(state);\n\tcrypto_xor(state->blocks[0].bytes, msg, AEGIS_BLOCK_SIZE);\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/drivers/base/bus.c\",\n\t\t\tcode:\n\t\t\t\t`\nstatic struct subsys_private *bus_to_subsys(const struct bus_type *bus)\n{\n\tstruct subsys_private *sp = NULL;\n\tstruct kobject *kobj;\n\n\tif (!bus || !bus_kset)\n\t\treturn NULL;\n\n\tspin_lock(&bus_kset->list_lock);\n\n\tif (list_empty(&bus_kset->list))\n\t\tgoto done;\n\n\tlist_for_each_entry(kobj, &bus_kset->list, entry) {\n\t\tstruct kset *kset = container_of(kobj, struct kset, kobj);\n\n\t\tsp = container_of_const(kset, struct subsys_private, subsys);\n\t\tif (sp->bus == bus)\n\t\t\tgoto done;\n\t}\n\tsp = NULL;\ndone:\n\tsp = subsys_get(sp);\n\tspin_unlock(&bus_kset->list_lock);\n\treturn sp;\n}\n\nstatic struct bus_type *bus_get(struct bus_type *bus)\n{\n\tstruct subsys_private *sp = bus_to_subsys(bus);\n\n\tif (sp)\n\t\treturn bus;\n\treturn NULL;\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/mm/compaction.c\",\n\t\t\tcode:\n\t\t\t\t`\nstatic void split_map_pages(struct list_head *list)\n{\n\tunsigned int i, order, nr_pages;\n\tstruct page *page, *next;\n\tLIST_HEAD(tmp_list);\n\n\tlist_for_each_entry_safe(page, next, list, lru) {\n\t\tlist_del(&page->lru);\n\n\t\torder = page_private(page);\n\t\tnr_pages = 1 << order;\n\n\t\tpost_alloc_hook(page, order, __GFP_MOVABLE);\n\t\tif (order)\n\t\t\tsplit_page(page, order);\n\n\t\tfor (i = 0; i < nr_pages; i++) {\n\t\t\tlist_add(&page->lru, &tmp_list);\n\t\t\tpage++;\n\t\t}\n\t}\n\n\tlist_splice(&tmp_list, list);\n}\n\nbool PageMovable(struct page *page)\n{\n\tconst struct movable_operations *mops;\n\n\tVM_BUG_ON_PAGE(!PageLocked(page), page);\n\tif (!__PageMovable(page))\n\t\treturn false;\n\n\tmops = page_movable_ops(page);\n\tif (mops)\n\t\treturn true;\n\n\treturn false;\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/sound/firewire/amdtp-stream.c\",\n\t\t\tcode:\n\t\t\t\t`\nint amdtp_stream_set_parameters(struct amdtp_stream *s, unsigned int rate,\n\t\t\t\tunsigned int data_block_quadlets, unsigned int pcm_frame_multiplier)\n{\n\tunsigned int sfc;\n\tfor (sfc = 0; sfc < ARRAY_SIZE(amdtp_rate_table); ++sfc) {\n\t\tif (amdtp_rate_table[sfc] == rate)\n\t\t\tbreak;\n\t}\n\tif (sfc == ARRAY_SIZE(amdtp_rate_table))\n\t\treturn -EINVAL;\n\ts->sfc = sfc;\n\ts->data_block_quadlets = data_block_quadlets;\n\ts->syt_interval = amdtp_syt_intervals[sfc];\n\ts->transfer_delay = TRANSFER_DELAY_TICKS - TICKS_PER_CYCLE;\n\tif (s->flags & CIP_BLOCKING)\n\t\ts->transfer_delay += TICKS_PER_SECOND * s->syt_interval / rate;\n\n\ts->pcm_frame_multiplier = pcm_frame_multiplier;\n\n\treturn 0;\n}\nEXPORT_SYMBOL(amdtp_stream_set_parameters);\nstatic int amdtp_stream_get_max_ctx_payload_size(struct amdtp_stream *s)\n{\n\tunsigned int multiplier;\n\tif (s->flags & CIP_JUMBO_PAYLOAD)\n\t\tmultiplier = IR_JUMBO_PAYLOAD_MAX_SKIP_CYCLES;\n\telse\n\t\tmultiplier = 1;\n\treturn s->syt_interval * s->data_block_quadlets * sizeof(__be32) * multiplier;\n}\n`\n\t\t}\n\t]\n}\n","import { linuxRepo } from \"./linux\";\nimport { reactRepo } from \"./react\";\nimport { tensorFlowRepo } from \"./tensorflow\";\n\nexport type RepoFile = {\n\tpath: string;\n\tcode: string;\n}\n\nexport type Repo = {\n\tlabel: string;\n\turl: string;\n\tfiles: RepoFile[];\n}\n\nexport const repoOptions: Repo[] = [\n\tlinuxRepo,\n\treactRepo,\n\ttensorFlowRepo\n]\n","import { Repo } from \".\";\n\nexport const reactRepo: Repo = {\n\tlabel: \"React\",\n\turl: \"https://github.com/facebook/react\",\n\tfiles: [\n\t\t{\n\t\t\tpath: \"/packages/react-dom/src/server/ReactDOMFizzServerBrowser.js\",\n\t\t\tcode:\n\t\t\t\t`\ntype ReactDOMServerReadableStream = ReadableStream & {\n  allReady: Promise<void>,\n};\n\nfunction renderToReadableStream(\n  children: ReactNodeList,\n  options?: Options,\n): Promise<ReactDOMServerReadableStream> {\n  return new Promise((resolve, reject) => {\n    let onFatalError;\n    let onAllReady;\n    const allReady = new Promise<void>((res, rej) => {\n      onAllReady = res;\n      onFatalError = rej;\n    });\n\n    function onShellReady() {\n      const stream: ReactDOMServerReadableStream = (new ReadableStream(\n        {\n          type: 'bytes',\n          pull: (controller): ?Promise<void> => {\n            startFlowing(request, controller);\n          },\n          cancel: (reason): ?Promise<void> => {\n            abort(request);\n          },\n        },\n        // $FlowFixMe size() methods are not allowed on byte streams.\n        {highWaterMark: 0},\n      ): any);\n      stream.allReady = allReady;\n      resolve(stream);\n    }\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/packages/react/src/ReactElement.js\",\n\t\t\tcode:\n\t\t\t\t`\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown,\n  specialPropRefWarningShown,\n  didWarnAboutStringRefs;\n\nif (__DEV__) {\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/packages/react-cache/src/LRU.js\",\n\t\t\tcode:\n\t\t\t\t`\nfunction deleteLeastRecentlyUsedEntries(targetSize: number) {\n\tif (first !== null) {\n\t\tconst resolvedFirst: Entry<T> = (first: any);\n\t\tlet last: null | Entry<T> = resolvedFirst.previous;\n\t\twhile (size > targetSize && last !== null) {\n\t\t\tconst onDelete = last.onDelete;\n\t\t\tconst previous = last.previous;\n\t\t\tlast.onDelete = (null: any);\n\t\t\tlast.previous = last.next = (null: any);\n\t\t\tif (last === first) {\n\t\t\t\tfirst = last = null;\n\t\t\t} else {\n\t\t\t\t(first: any).previous = previous;\n\t\t\t\tprevious.next = (first: any);\n\t\t\t\tlast = previous;\n\t\t\t}\n\t\t\tsize -= 1;\n\t\t\tonDelete();\n\t\t}\n\t}\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/packages/react-art/src/ReactART.js\",\n\t\t\tcode:\n\t\t\t\t`\nclass Surface extends React.Component {\n  componentDidMount() {\n    const {height, width} = this.props;\n    this._surface = Mode.Surface(+width, +height, this._tagRef);\n    this._mountNode = createContainer(\n      this._surface,\n      LegacyRoot,\n      null,\n      false,\n      false,\n      '',\n    );\n    updateContainer(this.props.children, this._mountNode, this);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n    if (props.height !== prevProps.height || props.width !== prevProps.width) {\n      this._surface.resize(+props.width, +props.height);\n    }\n    updateContainer(this.props.children, this._mountNode, this);\n    if (this._surface.render) {\n      this._surface.render();\n    }\n  }\n  componentWillUnmount() {\n    updateContainer(null, this._mountNode, this);\n  }\n  render() {\n    const props = this.props;\n    const Tag = Mode.Surface.tagName;\n    return (\n      <Tag\n        ref={ref => (this._tagRef = ref)}\n        accessKey={props.accessKey}\n        className={props.className}\n        draggable={props.draggable}\n        role={props.role}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        title={props.title}\n      />\n    );\n  }\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/packages/react/src/ReactChildren.js\",\n\t\t\tcode:\n\t\t\t\t`\nfunction mapIntoArray(\n  children: ?ReactNodeList,\n  array: Array<React$Node>,\n  escapedPrefix: string,\n  nameSoFar: string,\n  callback: (?React$Node) => ?ReactNodeList,\n): number {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch ((children: any).$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n  if (invokeCallback) {\n    const child = children;\n    let mappedChild = callback(child);\n    const childKey =\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\n    if (isArray(mappedChild)) {\n      let escapedChildKey = '';\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        if (__DEV__) {\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n        mappedChild = cloneAndReplaceKey(\n          mappedChild,\n          escapedPrefix +\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\n              ? escapeUserProvidedKey(\n                  '' + mappedChild.key, // eslint-disable-line react-internal/safe-string-coercion\n                ) + '/'\n              : '') +\n            childKey,\n        );\n      }\n      array.push(mappedChild);\n    }\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0;\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(\n        child,\n        array,\n        escapedPrefix,\n        nextName,\n        callback,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterableChildren: Iterable<React$Node> & {\n        entries: any,\n      } = (children: any);\n\n      const iterator = iteratorFn.call(iterableChildren);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(\n          child,\n          array,\n          escapedPrefix,\n          nextName,\n          callback,\n        );\n      }\n    } else if (type === 'object') {\n      const childrenString = String((children: any));\n\n      throw new Error(\n        \\`Objects are not valid as a React child (found: \\${\n          childrenString === '[object Object]'\n            ? 'object with keys {' +\n              Object.keys((children: any)).join(', ') +\n              '}'\n            : childrenString\n        }). \\` +\n          'If you meant to render a collection of children, use an array ' +\n          'instead.',\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n`\n\t\t}\n\t]\n}\n","import { Repo } from \".\";\n\nexport const tensorFlowRepo: Repo = {\n\tlabel: \"TensorFlow\",\n\turl: \"https://github.com/tensorflow/tensorflow\",\n\tfiles: [\n\t\t{\n\t\t\tpath: \"/tensorflow/python/autograph/impl/conversion.py\",\n\t\t\tcode: `\n_ALLOWLIST_CACHE = cache.UnboundInstanceCache()\n\ndef _is_of_known_loaded_module(f, module_name):\n  mod = sys.modules.get(module_name, None)\n  if mod is None:\n    return False\n  if any(v is not None for v in mod.__dict__.values() if f is v):\n    return True\n  return False\n\ndef _is_known_loaded_type(f, module_name, entity_name):\n  if (module_name not in sys.modules or\n      not hasattr(sys.modules[module_name], entity_name)):\n    return False\n  type_entity = getattr(sys.modules[module_name], entity_name)\n  if isinstance(f, type_entity):\n    return True\n  if inspect.ismethod(f):\n    if isinstance(f.__func__, type_entity):\n      return True\n  return False\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/tensorflow/python/framework/combinations.py\",\n\t\t\tcode:\n\t\t\t\t`\nclass EagerGraphCombination(test_combinations.TestCombination):\n  \"\"\"\n  The optional \\`mode\\` parameter controls the test's execution mode.  Its\n  accepted values are \"graph\" or \"eager\" literals.\n  \"\"\"\n\n  def context_managers(self, kwargs):\n    mode = kwargs.pop(\"mode\", None)\n    if mode is None:\n      return []\n    elif mode == \"eager\":\n      return [context.eager_mode()]\n    elif mode == \"graph\":\n      return [ops.Graph().as_default(), context.graph_mode()]\n    else:\n      raise ValueError(\n          \"Argument 'mode' must be either 'eager' or 'graph'. \"\n          f\"Received: {mode}.\")\n\n  def parameter_modifiers(self):\n    return [test_combinations.OptionalParameter(\"mode\")]\n\nclass TFVersionCombination(test_combinations.TestCombination):\n  def should_execute_combination(self, kwargs):\n    tf_api_version = kwargs.pop(\"tf_api_version\", None)\n    if tf_api_version == 1 and tf2.enabled():\n      return (False, \"Skipping a TF1.x test when TF2 is enabled.\")\n    elif tf_api_version == 2 and not tf2.enabled():\n      return (False, \"Skipping a TF2 test when TF2 is not enabled.\")\n    return (True, None)\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/tensorflow/core/kernels/linalg/determinant_op.cc\",\n\t\t\tcode:\n\t\t\t\t`\nnamespace tensorflow {\n\ttemplate <class Scalar>\n\tstatic typename Eigen::NumTraits<Scalar>::Real SLogDet(\n\t\t\tconst Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic>& inputs,\n\t\t\tScalar* sign) {\n\t\tusing RealScalar = typename Eigen::NumTraits<Scalar>::Real;\n\t\tRealScalar log_abs_det = 0;\n\t\t*sign = 1;\n\t\tif (inputs.size() > 0) {\n\t\t\tusing Eigen::Dynamic;\n\t\t\tEigen::PartialPivLU<Eigen::Matrix<Scalar, Dynamic, Dynamic>> lu(inputs);\n\t\t\tEigen::Matrix<Scalar, Dynamic, Dynamic> LU = lu.matrixLU();\n\t\t\t*sign = lu.permutationP().determinant();\n\t\t\tauto diag = LU.diagonal().array().eval();\n\t\t\tauto abs_diag = diag.cwiseAbs().eval();\n\t\t\tlog_abs_det += abs_diag.log().sum();\n\t\t\t*sign *= (diag / abs_diag).prod();\n\t\t}\n\t\tif (!Eigen::numext::isfinite(log_abs_det)) {\n\t\t\t*sign = 0;\n\t\t\tlog_abs_det =\n\t\t\t\t\tlog_abs_det > 0 ? -std::log(RealScalar(0)) : std::log(RealScalar(0));\n\t\t}\n\t\treturn log_abs_det;\n\t}\n}\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/tensorflow/core/grappler/graph_topology_view.cc\",\n\t\t\tcode:\n\t\t\t\t`\ntemplate <typename T>\ninline void SortAndRemoveDuplicates(T* v) {\n  std::sort(v->begin(), v->end());\n  v->erase(std::unique(v->begin(), v->end()), v->end());\n}\n\nStatus GraphTopologyView::InitializeFromGraph(\n    const GraphDef& graph,\n    const absl::Span<const GraphView::Edge> ephemeral_edges,\n    bool ignore_control_edges) {\n  if (graph_ != nullptr) {\n    return errors::InvalidArgument(\"GraphTopologyView is already initialized.\");\n  }\n\n  graph_ = &graph;\n  num_nodes_ = graph.node_size();\n  index_to_node_name_.resize(num_nodes_);\n  node_name_to_index_.rehash(num_nodes_);\n  fanins_.resize(num_nodes_);\n  fanouts_.resize(num_nodes_);\n\n  for (int node_idx = 0; node_idx < num_nodes_; ++node_idx) {\n    const NodeDef& node = graph.node(node_idx);\n    node_name_to_index_.emplace(node.name(), node_idx);\n    index_to_node_name_.emplace_back(node.name());\n  }\n`\n\t\t},\n\t\t{\n\t\t\tpath: \"/tensorflow/core/common_runtime/gpu/gpu_cudamalloc_allocator.cc\",\n\t\t\tcode:\n\t\t\t\t`\nvoid* GPUcudaMallocAllocator::AllocateRaw(size_t alignment, size_t num_bytes) {\n\t#ifdef GOOGLE_CUDA\n\t\t// allocate with cudaMalloc\n\t\tse::cuda::ScopedActivateExecutorContext scoped_activation{stream_exec_};\n\t\tCUdeviceptr rv = 0;\n\t\tCUresult res = cuMemAlloc(&rv, num_bytes);\n\t\tif (res != CUDA_SUCCESS) {\n\t\t\tconst char* error_name;\n\t\t\tconst char* error_string;\n\t\t\tcuGetErrorName(res, &error_name);\n\t\t\tcuGetErrorString(res, &error_string);\n\t\t\tLOG(ERROR) << \"cuMemAlloc failed to allocate \" << num_bytes\n\t\t\t\t\t\t\t\t << \"\\n Error name: \" << error_name\n\t\t\t\t\t\t\t\t << \"\\n Error string: \" << error_string;\n\t\t\treturn nullptr;\n\t\t}\n\t\tVLOG(10) << \"AllocateRaw \" << Name() << \"  \" << num_bytes << \" \"\n\t\t\t\t\t\t << reinterpret_cast<void*>(rv);\n\t\treturn reinterpret_cast<void*>(rv);\n\t#else\n\t\treturn nullptr;\n\t#endif  // GOOGLE_CUDA\n\t}\n`\n\t\t}\n\t],\n}\n","export const enterKey = \"Enter\";\nexport const backspaceKey = \"Backspace\";\nexport const tabKey = \"Tab\";\n","import { backspaceKey, enterKey } from \"./keyboard\";\n\nconst terminalElement = document.getElementById(\"terminal\") as HTMLElement;\nconst cursorElement = document.getElementById(\"cursor\") as HTMLElement;\n\nexport const separatorLine = \"------------------------------------------------\";\nconst promptPrefix = \"$ \";\nconst typingDelay = 20;\n\nexport const addTerminalCursor = () => {\n\tif (cursorElement.parentElement !== terminalElement)\n\t\tterminalElement.appendChild(cursorElement);\n}\n\nexport const removeTerminalCursor = () => {\n\tif (cursorElement.parentElement === terminalElement)\n\t\tterminalElement.removeChild(cursorElement);\n}\n\nexport const writeLines = async (lines: string[]) => {\n\tremoveTerminalCursor();\n\tfor (const line of lines) {\n\t\tawait writeSingleLine(line);\n\t\twriteLineBreak();\n\t}\n\tterminalElement.appendChild(cursorElement)\n}\n\nconst writeSingleLine = (line: string) => {\n\treturn new Promise<void>(resolve => {\n\t\tlet index = 0;\n\t\tconst interval = setInterval(() => {\n\t\t\twriteChar(line[index++]);\n\t\t\tif (index === line.length) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tresolve();\n\t\t\t}\n\t\t}, typingDelay);\n\t})\n};\n\nconst writeChar = (char: string) => {\n\tconst span = document.createElement(\"span\");\n\tspan.textContent = char;\n\tterminalElement.appendChild(span);\n\tterminalElement.appendChild(cursorElement);\n\tterminalElement.scrollTop = terminalElement.scrollHeight;\n}\n\nconst removeLastChar = () => {\n\tterminalElement.removeChild(cursorElement);\n\tconst last = terminalElement.lastChild;\n\tif (last) terminalElement.removeChild(last);\n\tterminalElement.appendChild(cursorElement);\n}\n\nconst writeLineBreak = () => {\n\tterminalElement.appendChild(document.createElement(\"br\"));\n}\n\nconst inputRegex = /^[\\w\\d ]$/\n\nexport const readLine = () => {\n\treturn new Promise<string>(resolve => {\n\t\tlet line = \"\";\n\n\t\tconst listener = (event: KeyboardEvent) => {\n\t\t\tconst key = event.key;\n\t\t\tif (inputRegex.test(key)) {\n\t\t\t\tline += key;\n\t\t\t\twriteChar(key);\n\t\t\t} else if (key === enterKey && line.length > 0) {\n\t\t\t\tdocument.removeEventListener(\"keydown\", listener);\n\t\t\t\twriteLineBreak();\n\t\t\t\tresolve(line);\n\t\t\t} else if (key === backspaceKey && line.length > 0) {\n        event.preventDefault();\n\t\t\t\tline = line.slice(0, line.length - 1);\n\t\t\t\tremoveLastChar();\n\t\t\t}\n\t\t}\n\n\t\twriteSingleLine(promptPrefix);\n\t\tdocument.addEventListener(\"keydown\", listener);\n\t})\n}\n\ntype Option = {\n\tlabel: string;\n}\n\nconst chooseOptionErrorMessages = [\n\t[\"Just enter a\", \"Don't be silly :)\"],\n\t[\"A\", \"I mean it this time.\"],\n\t[\"Ok, you've had your fun... Simply enter a\", \"This is important!\"],\n\t[\"What does that even mean? Please, a\", \"I thought we were past this...\"],\n\t[\"Ok, wow... Do me a favor here with a\", \"It's getting embarrassing now, really.\"],\n\t[\"Let me check... Nope, that's not a\", \"Let's not play these games anymore, hm?\"],\n]\n\nexport const chooseOption = async <T extends Option>(options: T[]) => {\n\tawait writeLines([\n\t\t...options.map((opt, index) => `${index + 1}. ${opt.label}`),\n\t\t\" \"\n\t]);\n\tlet tryIndex = 0;\n\n\tlet index = -1;\n\twhile (index === -1) {\n\t\tconst number = parseInt(await readLine());\n\t\tif (number > 0 && number <= options.length) {\n\t\t\tindex = number - 1;\n\t\t} else {\n\t\t\tconst errorMessage = chooseOptionErrorMessages[tryIndex++];\n\t\t\ttryIndex = tryIndex % chooseOptionErrorMessages.length;\n\n\t\t\tawait writeLines([\n\t\t\t\t\" \",\n\t\t\t\t`${errorMessage[0]} number between 1 and ${options.length}.`,\n\t\t\t\terrorMessage[1],\n\t\t\t\t\" \"\n\t\t\t]);\n\t\t}\n\t}\n\n\treturn options[index];\n}\n\nexport const clearTerminal = () => {\n\tterminalElement.innerHTML = \"\";\n}\n","import { backspaceKey, enterKey, tabKey } from \"./keyboard\";\nimport { separatorLine } from \"./terminal\";\n\nconst editorElement = document.getElementById(\"editor\") as HTMLElement;\nconst statsElement = document.getElementById(\"stats\") as HTMLElement;\n\nconst linesPerPage = 3;\nconst typingTime = 45000;\nconst cursorClassName = \"cursor\";\nconst nextClassName = \"next\";\nconst wrongClassName = \"wrong\";\nconst whitespaceRegex = /\\s/;\n\nexport type EditorResult = {\n\ttotalCharacters: number;\n\tcorrectCharacters: number;\n\treachedTheEnd: boolean;\n\ttotalTime: number;\n}\n\nconst printCode = (lines: string[]) => {\n\teditorElement.innerHTML = \"\";\n\tlet index = 0;\n\tfor (const line of lines) {\n\t\tfor (const character of line) {\n\t\t\tconst span = document.createElement(\"span\");\n\t\t\tspan.innerText = character;\n\t\t\tif (index > 0) span.classList.add(\"next\");\n\t\t\tif (whitespaceRegex.test(character))\n\t\t\t\tspan.setAttribute(\"data-whitespace\", \"true\");\n\t\t\teditorElement.appendChild(span);\n\t\t\tindex++;\n\t\t}\n\t\teditorElement.appendChild(document.createElement(\"br\"));\n\t}\n\n\tconst firstElement = editorElement.firstChild as Element;\n\tfirstElement.classList.add(cursorClassName);\n\treturn firstElement;\n}\n\nconst printStats = (result: EditorResult) => {\n\tconst secondsLeft = ((typingTime - result.totalTime) / 1000).toFixed(0);\n\tstatsElement.innerHTML = [\n\t\t\"\",\n\t\tseparatorLine,\n\t\t`Time left: ${secondsLeft} seconds`,\n\t\t`Characters typed: ${result.totalCharacters}`,\n\t\t`Errors: ${result.totalCharacters - result.correctCharacters}`,\n\t].join(\"<br/>\")\n}\n\nconst normalizeCode = (code: string) => {\n\treturn code.trim().replace(/\\t/g, \"  \");\n}\n\nexport const startEditor = (code: string) => {\n\tcode = normalizeCode(code);\n\treturn new Promise<EditorResult>(async resolve => {\n\t\tconst allLines = code.split(/[ \\t]*\\r?\\n/)\n\t\t\t.filter(l => l.trim().length > 0)\n\t\t\t.map(l => l + \" \");\n\n\t\tlet firstLineIndex = 0;\n\t\tlet charIndex = 0;\n\t\tlet lineIndex = 0;\n\t\tlet totalCharacters = 0;\n\t\tlet correctCharacters = 0;\n\t\tlet pageLines = allLines.slice(firstLineIndex, linesPerPage);\n\t\tlet line = pageLines[lineIndex];\n\t\tlet element = printCode(pageLines);\n\t\tlet startTime = 0;\n\t\tlet timeoutHandle = 0;\n\t\tlet statsIntervalHandle = 0;\n\t\tlet lineCorrectness: boolean[] = [];\n\n\t\tconst advanceCharacter = (isCorrect: boolean) => {\n\t\t\telement.classList.remove(cursorClassName);\n\t\t\tif (!isCorrect) element.classList.add(wrongClassName);\n\t\t\telement = element.nextElementSibling as Element;\n\t\t\telement.classList.remove(nextClassName);\n\t\t\telement.classList.add(cursorClassName);\n\t\t\tlineCorrectness.push(isCorrect);\n\t\t\tcharIndex++;\n\t\t}\n\n\t\tconst applyBackspace = () => {\n\t\t\telement.classList.remove(cursorClassName);\n\t\t\telement.classList.add(nextClassName);\n\t\t\telement = element.previousElementSibling as Element;\n\t\t\telement.classList.remove(wrongClassName);\n\t\t\telement.classList.add(cursorClassName);\n\t\t\tcharIndex--;\n\t\t\tif (lineCorrectness[charIndex])\n\t\t\t\tcorrectCharacters--;\n\t\t\tlineCorrectness = lineCorrectness.slice(0, -1);\n\t\t}\n\n\t\tconst advanceLine = () => {\n\t\t\tline = pageLines[++lineIndex];\n\t\t\tcharIndex = 0;\n\t\t\tlineCorrectness = []\n\t\t\telement.classList.remove(cursorClassName);\n\t\t\telement = element.nextElementSibling?.nextElementSibling as Element;\n\t\t\telement.classList.remove(nextClassName);\n\t\t\telement.classList.add(cursorClassName);\n\t\t\tadvanceWhitespace();\n\t\t}\n\n\t\tconst advancePage = () => {\n\t\t\tfirstLineIndex += pageLines.length;\n\t\t\tpageLines = allLines.slice(firstLineIndex, firstLineIndex + linesPerPage);\n\t\t\tlineIndex = 0;\n\t\t\tcharIndex = 0;\n\t\t\tline = pageLines[lineIndex];\n\t\t\telement = printCode(pageLines);\n\t\t\tadvanceWhitespace();\n\t\t}\n\n\t\tconst advanceWhitespace = () => {\n\t\t\tlet count = 0;\n\t\t\twhile (charIndex + count < line.length - 1 && whitespaceRegex.test(line[charIndex + count])) {\n\t\t\t\tadvanceCharacter(true);\n\t\t\t}\n\t\t}\n\n\t\tconst getResult = (): EditorResult => {\n\t\t\tconst now = new Date().valueOf();\n\t\t\tconst totalTime = now - startTime;\n\t\t\treturn {\n\t\t\t\tcorrectCharacters,\n\t\t\t\ttotalCharacters,\n\t\t\t\ttotalTime,\n\t\t\t\treachedTheEnd: totalTime <= typingTime\n\t\t\t}\n\t\t}\n\n\t\tconst endTyping = () => {\n\t\t\tdocument.removeEventListener(\"keydown\", listener);\n\t\t\tclearTimeout(timeoutHandle);\n\t\t\tclearInterval(statsIntervalHandle);\n\t\t\tresolve(getResult());\n\t\t}\n\n\t\tconst beginTyping = () => {\n\t\t\tstartTime = new Date().valueOf();\n\t\t\ttimeoutHandle = setTimeout(endTyping, typingTime);\n\t\t\tstatsIntervalHandle = setInterval(() => printStats(getResult()), 1000);\n\t\t}\n\n\t\tconst processKey = (key: string) => {\n\t\t\tif (key.length === 1 && charIndex < line.length - 1) {\n\t\t\t\tif (startTime === 0) beginTyping();\n\t\t\t\tconst isCorrect = key === line[charIndex];\n\t\t\t\tadvanceCharacter(isCorrect);\n\t\t\t\tcorrectCharacters += isCorrect ? 1 : 0;\n\t\t\t\ttotalCharacters++;\n\n\t\t\t\tif (charIndex === line.length - 1 && lineIndex === pageLines.length - 1) {\n\t\t\t\t\tif (firstLineIndex < allLines.length - 1) {\n\t\t\t\t\t\tadvancePage();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tendTyping();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (charIndex > 0 && key === backspaceKey) {\n\t\t\t\tapplyBackspace();\n\t\t\t} else if (charIndex === line.length - 1 && key === enterKey) {\n\t\t\t\ttotalCharacters++;\n\t\t\t\tcorrectCharacters++;\n\t\t\t\tif (lineIndex < pageLines.length - 1) {\n\t\t\t\t\tadvanceLine();\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintStats(getResult());\n\t\t}\n\n\t\tconst listener = (event: KeyboardEvent) => {\n\t\t\tconst key = event.key;\n\t\t\tif (key === tabKey) {\n\t\t\t\tprocessKey(\" \");\n\t\t\t\tprocessKey(\" \");\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tprocessKey(key)\n\t\t\t}\n\t\t}\n\n\t\tdocument.addEventListener(\"keydown\", listener);\n\t});\n}\n\nexport const clearEditor = () => {\n\teditorElement.innerHTML = \"\";\n\tstatsElement.innerHTML = \"\";\n}\n","import { Repo, RepoFile, repoOptions } from \"./data\";\nimport { clearEditor, EditorResult, startEditor } from \"./editor\";\nimport { chooseOption, clearTerminal, readLine, removeTerminalCursor, separatorLine, writeLines } from \"./terminal\";\n\nconst getRoundLine = (round: number, wantsToPlayAgain: boolean) => {\n\tif (round === 1) return \"Welcome to coder type!\";\n\tif (wantsToPlayAgain) return \"Yay! Let's play again! :)\"\n\treturn \"Ah whatever, I'm just gonna let you play again! :)\";\n}\n\nconst writeFileHeader = async (repo: Repo, file: RepoFile) => {\n\tclearTerminal();\n\tawait writeLines([\n\t\t`${repo.label} it is!`,\n\t\tseparatorLine,\n\t\t`Repo: ${repo.url}`,\n\t\t`File: ${file.path}`,\n\t\t\" \",\n\t\t\"When you are ready, start typing!\",\n\t\tseparatorLine,\n\t\t\" \"\n\t]);\n}\n\nconst writeResult = async (result: EditorResult) => {\n\tconst errors = result.totalCharacters - result.correctCharacters;\n\tconst accuracy = result.totalCharacters > 0 ? result.correctCharacters / result.totalCharacters * 100 : 0;\n\tconst ccps = result.correctCharacters / result.totalTime * 1000 * 60;\n\n\tawait writeLines([\n\t\tresult.reachedTheEnd\n\t\t\t? \"Wow you've completed the entire snippet!\"\n\t\t\t: \"Time's up!\",\n\t\t`Here are your results:`,\n\t\tseparatorLine,\n\t\t\" \",\n\t\t`Correct characters per minute: ${ccps.toFixed(2)}`,\n\t\t\"Total errors: \" + (errors > 0 ? errors : \"No errors, what a performance!\"),\n\t\t`Accuracy: ${accuracy.toFixed(2)}%`,\n\t\t\" \",\n\t\tseparatorLine,\n\t\t\"Wanna play again? (y, n)\",\n\t\t\" \",\n\t])\n}\n\nconst runGame = async () => {\n\tlet round = 1;\n\tlet wantsToPlayAgain = true;\n\n\twhile (true) {\n\t\tclearTerminal();\n\t\tawait writeLines([\n\t\t\tgetRoundLine(round, wantsToPlayAgain),\n\t\t\t\"Please select practice repo:\",\n\t\t\t\" \",\n\t\t]);\n\t\tconst repo = await chooseOption(repoOptions);\n\t\tconst file = repo.files[Math.floor(Math.random() * repo.files.length)];\n\t\tawait writeFileHeader(repo, file);\n\t\tremoveTerminalCursor();\n\n\t\tconst result = await startEditor(file.code);\n\n\t\tclearEditor();\n\t\tclearTerminal();\n\t\tawait writeResult(result);\n\n\t\twantsToPlayAgain = await readLine() === \"y\";\n\t\tround++;\n\t}\n}\n\nrunGame();\n"],"names":["$1827fe813d3ad6b1$export$e66b7e96f68baa33","label","url","files","path","code","$45d8b9eb3313fa32$export$bfc660ed5e9aaada","$45d8b9eb3313fa32$export$561e89c5dae7ce4f","$e9fe74aa4cf26bda$var$terminalElement","document","getElementById","$e9fe74aa4cf26bda$var$cursorElement","$e9fe74aa4cf26bda$export$9c33cc206d26b2a3","$e9fe74aa4cf26bda$export$20e160e9cdb155dc","parentElement","removeChild","$e9fe74aa4cf26bda$export$b45d0ade463cc6cb","async","lines","line","$e9fe74aa4cf26bda$var$writeSingleLine","$e9fe74aa4cf26bda$var$writeLineBreak","appendChild","Promise","resolve","index","interval","setInterval","$e9fe74aa4cf26bda$var$writeChar","length","clearInterval","char","span","createElement","textContent","scrollTop","scrollHeight","$e9fe74aa4cf26bda$var$inputRegex","$e9fe74aa4cf26bda$export$5ee1485dc24ea3f2","listener","event","key","test","removeEventListener","preventDefault","slice","last","lastChild","$e9fe74aa4cf26bda$var$removeLastChar","addEventListener","$e9fe74aa4cf26bda$var$chooseOptionErrorMessages","$e9fe74aa4cf26bda$export$c6c21040352e309d","options","map","opt","tryIndex","number","parseInt","errorMessage","$e9fe74aa4cf26bda$export$d63b65b544049624","innerHTML","$cd803e7fb379cde8$var$editorElement","$cd803e7fb379cde8$var$statsElement","$cd803e7fb379cde8$var$typingTime","$cd803e7fb379cde8$var$cursorClassName","$cd803e7fb379cde8$var$nextClassName","$cd803e7fb379cde8$var$wrongClassName","$cd803e7fb379cde8$var$whitespaceRegex","$cd803e7fb379cde8$var$printCode","character","innerText","classList","add","setAttribute","firstElement","firstChild","$cd803e7fb379cde8$var$printStats","result","secondsLeft","totalTime","toFixed","totalCharacters","correctCharacters","join","$cd803e7fb379cde8$export$d81338a411139aa6","trim","replace","$cd803e7fb379cde8$var$normalizeCode","allLines","split","filter","l","firstLineIndex","charIndex","lineIndex","pageLines","element","startTime","timeoutHandle","statsIntervalHandle","lineCorrectness","advanceCharacter","isCorrect","remove","nextElementSibling","push","advanceWhitespace","getResult","Date","valueOf","reachedTheEnd","endTyping","clearTimeout","processKey","setTimeout","previousElementSibling","stopPropagation","$44718417e850519b$var$getRoundLine","round","wantsToPlayAgain","$44718417e850519b$var$writeFileHeader","repo","file","$44718417e850519b$var$writeResult","errors","accuracy","ccps","Math","floor","random","$44718417e850519b$var$runGame"],"version":3,"file":"index.f9d944a4.js.map"}